name: general-ci
on:
  push:
    paths:
      - '01-general/**'
      - '.github/workflows/general-ci.yml'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    env:
      CONTEXT: 01-general
      IMAGE: docker.io/${{ secrets.DOCKERHUB_USER }}/sa-test:v1-hardened

    steps:
      - uses: actions/checkout@v4

      - name: Buildx setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (local, cached)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.CONTEXT }}/Dockerfile-hardened
          tags: ${{ env.IMAGE }}
          load: true
          cache-from: type=gha,scope=sa-test
          cache-to: type=gha,mode=max,scope=sa-test

      - name: Make reports dir
        run: mkdir -p ${{ env.CONTEXT }}/reports

      - name: Trivy scan (gate + SARIF)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.IMAGE }}
          scanners: vuln
          format: sarif
          output: ${{ env.CONTEXT }}/reports/trivy.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE }}
          format: cyclonedx-json
          output-file: ${{ env.CONTEXT }}/reports/sbom.cdx.json

      - name: Upload security artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: ${{ env.CONTEXT }}/reports/
          retention-days: 7

      - name: Push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.CONTEXT }}/Dockerfile-hardened
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=gha,scope=sa-test
          cache-to: type=gha,mode=max,scope=sa-test

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Create KinD cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: ci-cluster
          wait: 120s
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane
              extraPortMappings:
              - containerPort: 30080
                hostPort: 8080
                protocol: TCP

      - name: Deploy manifests
        working-directory: ${{ env.CONTEXT }}
        run: |
          kubectl get ns sa-test >/dev/null 2>&1 || kubectl create ns sa-test
          kubectl -n sa-test apply -f k8s/deployment.yaml
          kubectl -n sa-test apply -f k8s/service.yaml
          kubectl -n sa-test rollout status deploy/sa-test

      - name: Curl service
        run: |
          for i in {1..10}; do
            if curl -fsS http://127.0.0.1:8080 | head -n 20; then exit 0; fi
            sleep 2
          done
          echo "Service not responding in time" >&2
          kubectl -n sa-test get pods -o wide
          kubectl -n sa-test describe pod -l app=sa-test
          exit 1