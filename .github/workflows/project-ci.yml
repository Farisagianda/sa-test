name: project-ci

on:
  push:
    paths:
      - '02-project/**'
      - '.github/workflows/project-ci.yml'

env:
  CONTEXT: 02-project/app
  IMAGE_REPO: docker.io/${{ secrets.DOCKERHUB_USER }}/sa-dev-envs-api
  IMAGE_TAG: v1
  CACHE_PREFIX: sa-dev-envs-api

jobs:
  build:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    runs-on: ${{ startsWith(matrix.platform, 'linux/arm64') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push (${{ matrix.platform }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.CONTEXT }}/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}-${{ startsWith(matrix.platform, 'linux/arm64') && 'arm64' || 'amd64' }}
          push: true
          cache-from: type=gha,scope=${{ env.CACHE_PREFIX }}-${{ matrix.platform }}
          cache-to:   type=gha,scope=${{ env.CACHE_PREFIX }}-${{ matrix.platform }},mode=max

  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create multi-arch manifest tag (:v1)
        run: |
          docker buildx imagetools create \
            -t ${IMAGE_REPO}:${IMAGE_TAG} \
            ${IMAGE_REPO}:${IMAGE_TAG}-amd64 \
            ${IMAGE_REPO}:${IMAGE_TAG}-arm64

  deploy-smoke:
    needs: manifest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Create KinD cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: project-ci
          wait: 120s

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Helm deploy dev-envs chart (use amd64 tag for KinD)
        working-directory: 02-project
        env:
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
          IMAGE_TAG:  ${{ env.IMAGE_TAG }}
        run: |
          helm upgrade --install dev-envs ./charts/dev-envs \
            -n dev --create-namespace \
            -f charts/dev-envs/values.yaml \
            --set image.repository=${IMAGE_REPO} \
            --set image.tag=${IMAGE_TAG}-amd64
          kubectl -n dev rollout status deploy/dev-envs-api

      - name: Smoke test UI (/static/)
        run: |
          kubectl -n dev port-forward svc/dev-envs-api 8080:8080 >/tmp/pf.log 2>&1 &
          PF_PID=$!
          for i in {1..15}; do
            sleep 7
            if curl -fsS http://127.0.0.1:8080/static/ | head -n 5; then
              kill $PF_PID || true
              exit 0
            fi
          done
          echo "::error::Service did not respond" >&2
          echo "---- PF logs ----"; cat /tmp/pf.log || true
          echo "---- Pods ----"; kubectl -n dev get pods -o wide || true
          echo "---- Describe ----"; kubectl -n dev describe deploy/dev-envs-api || true
          kill $PF_PID || true
          exit 1