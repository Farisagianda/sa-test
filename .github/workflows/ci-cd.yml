name: ci-cd
on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Buildx setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build for scan
        run: |
          cd question1
          docker buildx build --load -f Dockerfile-hardened \
            -t docker.io/${{ secrets.DOCKERHUB_USER }}/sa-test:v1-hardened .

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USER }}/sa-test:v1-hardened
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '1'

      - name: Push image
        run: |
          docker push docker.io/${{ secrets.DOCKERHUB_USER }}/sa-test:v1-hardened

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Decode kubeconfig from secret
        run: |
          set -euo pipefail
          KCONF="$RUNNER_TEMP/kubeconfig"
          echo "${KUBECONFIG_B64}" | base64 -d > "$KCONF"
          chmod 600 "$KCONF"
          KUBECONFIG="$KCONF" kubectl config use-context minikube
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}

      - name: Deploy manifests
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_PATH }}
        run: |
          export KUBECONFIG="$RUNNER_TEMP/kubeconfig"
          kubectl apply -f k8s/namespace.yaml
          kubectl -n sa-test apply -f k8s/deployment.yaml
          kubectl -n sa-test apply -f k8s/service.yaml
          kubectl -n sa-test rollout status deploy/sa-test